class Solution {
public:
    bool isPossible(vector<int>& weights,int size,int days,int mid)
    {
        int daysCount=1;
        int shipCapacityCount=0;
        for(int i=0;i<size;i++)
        {
            if(shipCapacityCount+weights[i]<=mid)
            shipCapacityCount += weights[i];
            else
            {
                daysCount++;
                if(daysCount>days || weights[i]>mid)
                return false;

                shipCapacityCount = weights[i];
            }
        }
        return true;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        int size=weights.size();
        if(days>size)
        return -1;
        int s=0;
        int sum=0;
        for(int i=0;i<size;i++)
        sum += weights[i];

        int e=sum;
        int mid=s+(e-s)/2;
        int ans=-1;
        while(s<=e)
        {
            if(isPossible(weights,size,days,mid))
            {
                ans=mid;
                e=mid-1;
            }
            else
            {
                s=mid+1;
            }
            mid = s+(e-s)/2;
        }
        return ans;
    }
};
